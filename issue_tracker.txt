issue_tracker.txt:

1. Issue #123: Description of the issue. Status: Open
2. Issue #456: Description of another issue. Status: Fixed

def update_issue_tracker(issue_number, description, status):
    with open("issue_tracker.txt", "a") as file:
        file.write(f"Issue #{issue_number}: {description}. Status: {status}\n")

def fix_issue(issue_number):
    with open("issue_tracker.txt", "r+") as file:
        lines = file.readlines()
        file.seek(0)
        for line in lines:
            if line.startswith(f"Issue #{issue_number}"):
                line = line.replace("Status: Open", "Status: Fixed")
            file.write(line)
        file.truncate()

# Unit tests for update_issue_tracker
def test_update_issue_tracker():
    update_issue_tracker(123, "Description of the issue", "Open")
    update_issue_tracker(456, "Description of another issue", "Open")

    with open("issue_tracker.txt", "r") as file:
        lines = file.readlines()
        assert len(lines) == 2
        assert lines[0].strip() == "Issue #123: Description of the issue. Status: Open"
        assert lines[1].strip() == "Issue #456: Description of another issue. Status: Open"

# Unit tests for fix_issue
def test_fix_issue():
    fix_issue(456)

    with open("issue_tracker.txt", "r") as file:
        lines = file.readlines()
        assert len(lines) == 2
        assert lines[0].strip() == "Issue #123: Description of the issue. Status: Open"
        assert lines[1].strip() == "Issue #456: Description of another issue. Status: Fixed"
